@page "/CheckedOutBooks"
@inject IUserService UserService

<h1 class="text-center mb-4" style="font-weight: bold;">Danh Sách Sách Đã Checkout</h1>

<div class="container">
    <div class="row mb-3">
        <div class="col-md-4">
            <input type="text" class="form-control" placeholder="Tìm kiếm theo Mã Phiếu"  />
        </div>
    </div>
    <table class="table table-hover table-bordered table-striped">
        <thead class="table-dark">
            <tr>
                <th class="text-center">Mã Phiếu</th>
                <th class="text-center">Mã Người Dùng</th>
                <th class="text-center">Mã Sách</th>
                <th class="text-center">Ngày Mượn</th>
                <th class="text-center">Ngày Trả</th>
                <th class="text-center">Ngày Trả Thực Tế</th>
                <th class="text-center">Trạng Thái</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var record in checkedOutBooks)
            {
                <tr>
                    <td class="text-center">@record.Id</td>
                    <td class="text-center">@record.UserId</td>
                    <td class="text-center">@record.BookId</td>
                    <td class="text-center">@record.BorrowedDate.ToString("dd/MM/yyyy")</td>
                    <td class="text-center">@record.DueDate.ToString("dd/MM/yyyy")</td>
                    <td class="text-center">@record.ReturnedDate?.ToString("dd/MM/yyyy")</td>
                    <td>@record.Status</td>
                </tr>
            }
        </tbody>
    </table>
</div>

@code {
    List<BorrowingRecord> checkedOutBooks = new List<BorrowingRecord>();

    protected override async Task OnInitializedAsync()
    {
        checkedOutBooks = await UserService.GetCheckedOutBooksAsync();
    }
}
